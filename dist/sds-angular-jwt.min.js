/*! 
 * sds-angular-jwt
 * Angular JWT framework
 * @version 0.5.5 
 * 
 * Copyright (c) 2016 David Benson, Steve Gentile 
 * @link https://github.com/SMARTDATASYSTEMSLLC/sds-angular-jwt 
 * @license  MIT 
 */

angular.module("sds-angular-jwt",["angular-jwt"]),function(){"use strict";angular.module("sds-angular-jwt").config(["$httpProvider",function(a){a.interceptors.push("authInterceptorService")}]).run(["$q","$location","$rootScope","authService","authConfig",function(a,b,c,d,e){function f(a){a.preventDefault(),i&&b.path(i)}function g(a,c,g){if(d.authentication.isAuth){if(h)b.url(h),h=null;else if(a){var j=!0;"string"!=typeof a.auth||e.permissionLookup(a.auth,d.authentication.data,c)||(j=!1,i=i||"/"),j?a&&a.templateUrl&&(i=b.url()):f(g)}}else a&&a.auth!==!1?(a.redirectTo||(h=b.url()),b.path(e.loginUrl).replace()):b.path(b.path())}var h,i=e.loginUrl;c.$on("$routeChangeStart",function(a,b){b&&g(b.$$route,b.params,a)}),c.$on("$stateChangeStart",function(a,b,c){g(b,c,a)}),g(null,null)}])}(),function(){"use strict";function a(a,b,c,d,e){var f={},g=function(a){var b=c.get("authService");return a.headers=a.headers||{},b.authentication.isAuth&&(a.headers.Authorization="Bearer "+b.authentication.token),e.onLoadStart(),a},h=function(a){return e.onLoadEnd({success:!0}),a},i=function(a){console.log(a)},j=function(){return d.path().indexOf("login")>-1||d.path().indexOf("registration")>-1},k=function(f){if(401===f.status&&!j()){var g=c.get("authService");g.authentication&&g.authentication.useRefreshTokens?g.refreshToken().then(function(){d.reload()},function(){d.path(e.loginUrl)}):(g.logOut(),d.path(e.loginUrl))}return 404===f.status&&e.notFoundUrl&&a(function(){d.path(e.notFoundUrl)},1e3),e.onLoadEnd({success:!1,status:f.status,message:f.data&&f.data.message,error:f.data&&f.data.error}),b.reject(f)};return f.request=g,f.response=h,f.requestError=i,f.responseError=k,f}a.$inject=["$timeout","$q","$injector","$location","authConfig"],angular.module("sds-angular-jwt").factory("authInterceptorService",a)}(),function(){"use strict";function a(){var a=this;a.onLoadStart=function(){},a.onLoadEnd=function(){},a.formatLoginParams=function(a){return a},a.permissionLookup=function(a,b,c){if(!b||!b.roles)return!1;if(b.su)return!0;var d=b.roles.map(function(a){return a.tenant_id}).indexOf(parseInt(c.tenantId));return-1===d?!1:b.roles[d]&&b.roles[d].permissions.access[a]},a.tokenUrl="/api/auth",a.refreshUrl="/api/auth/refresh",a.loginUrl="/login",a.notFoundUrl=null,a.localization={errorTitle:"There seems to be a problem",errorEmail:"A valid email address is required",errorPassword:"Password is required",errorPasswordMatch:"Passwords must match",errorConfirm:"Confirm Password is required",errorForgotPassword:"Error sending reset request. Please contact support.",errorLogin:"Could not validate your login credentials. Please try again.",errorLoginRejected:"Your email or password is invalid. Please try again.",errorRegister:"Error submitting registration. Please contact support.",errorResetPassword:"Error resetting password. Please contact support.",successForgotPasswordTitle:"Request Received",successForgotPassword:"An email will be sent to you with instructions to reset your password.",successRegisterTitle:"Registration Successful",successRegister:"A confirmation email has been sent to your email address.",successResetPasswordTitle:"Password Change Successful",successResetPassword:"Your password has been reset.",forgotPasswordText:"Enter your email address and we will send you a link to reset your password.",loginPage:"Return to login page",submit:"Submit",login:"Login",email:"Email Address",password:"Password",confirm:"Confirm Password"},a.$get=function(){return{onLoadStart:a.onLoadStart,onLoadEnd:a.onLoadEnd,permissionLookup:a.permissionLookup,formatLoginParams:a.formatLoginParams,tokenUrl:a.tokenUrl,refreshUrl:a.refreshUrl,loginUrl:a.loginUrl,notFoundUrl:a.notFoundUrl,localization:a.localization}},a.setFormatLoginParams=function(b){a.formatLoginParams=b},a.setRoutes=function(b){a.tokenUrl=b.tokenUrl||a.tokenUrl,a.refreshUrl=b.refreshUrl||a.refreshUrl,a.loginUrl=b.loginUrl||a.loginUrl,a.notFoundUrl=b.notFoundUrl||a.notFoundUrl},a.setLocalization=function(b){angular.extend(a.localization,b)},a.setOnLoadStart=function(b){if("function"!=typeof b)throw new Error("Parameter must be a function");a.onLoadStart=b},a.setOnLoadEnd=function(b){if("function"!=typeof b)throw new Error("Parameter must be a function");a.onLoadEnd=b},a.setPermissionLookup=function(b){if("function"!=typeof b)throw new Error("Parameter must be a function");a.lookupPermission=b},a.setLoginUrl=function(b){a.loginUrl=b},a.setNotFoundUrl=function(b){a.notFoundUrl=b},a.setRefreshUrl=function(b){a.refreshUrl=b},a.setTokenUrl=function(b){a.tokenUrl=b}}angular.module("sds-angular-jwt").provider("authConfig",a)}(),function(){"use strict";function a(a,b,c,d,e,f,g,h){var i={},j=function(){i.authentication={isAuth:!1,data:{},useRefreshToken:null,token:null},g.localStorage.removeItem("token")},k=function(a){return b(function(b,c){i.authentication.isAuth=!0,i.authentication.token=a.token||a.access_token,i.authentication.useRefreshToken=a.refresh_token||null;var d=f.decodeToken(i.authentication.token);d.data?i.authentication.data=d.data:i.authentication.data=d,e.$broadcast("auth:userUpdate");try{return g.localStorage.token=i.authentication.token,b(i.authentication)}catch(h){return j(),c({message:"This application does not support private browsing mode. Please turn off private browsing to log in."})}})};return i.authentication={isAuth:!1,data:{},useRefreshToken:null,token:null},i.login=function(b){return a.get("$http").post(h.tokenUrl,$.param(h.formatLoginParams(b)),{headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(a){return k(a.data)})},i.logOut=function(a){var f=b.defer();return c.info("logging out"),void 0===a&&(a=!0),i.authentication.userId?i.deleteToken().then(function(){j(),a&&(e.$broadcast("auth:userLogOff"),f.resolve())}):d(function(){j(),a&&(e.$broadcast("auth:userLogOff"),f.resolve())}),f.promise},i.deleteToken=function(){var b=h.tokenUrl+"/"+i.authentication.data.id;return a.get("$http")["delete"](b)},i.allowed=function(a,b){return h.permissionLookup(a,i.authentication.data,b)},i.refreshToken=function(){return b(function(b,c){if(g.localStorage.token){var d=f.decodeToken(g.localStorage.token);if(d&&d.useRefreshToken!==!1)return g.localStorage.removeItem("token"),a.get("$http").post(h.refreshUrl).then(function(a){return k(a.data).then(function(){return b()})},function(a){return i.logOut().then(function(){c(a)})})}return b()})},i.fillAuthData=function(){if(g.localStorage.token){i.authentication.isAuth=!0,i.authentication.token=g.localStorage.token;var a=f.decodeToken(g.localStorage.token);a.data?i.authentication.data=a.data:i.authentication.data=a}},i.fillAuthData(),i}a.$inject=["$injector","$q","$log","$timeout","$rootScope","jwtHelper","$window","authConfig"],angular.module("sds-angular-jwt").factory("authService",a)}(),function(){"use strict";function a(a,b,c,d){return{restrict:"EA",transclude:!0,scope:{redirectUrl:"@",loginUrl:"@",onSubmit:"&"},templateUrl:"sds-angular-jwt/directives/auth-forgot-password-directive.html",link:function(e,f,g){var h={};h.loc=d.localization,h.loginUrl=e.loginUrl||d.loginUrl,h.success=!1,h.user={email:null},h.submit=function(d){h.message="",d.$valid&&a.when(e.onSubmit()(h.user)).then(function(){h.success=!0,e.redirectUrl&&c(function(){b.path(e.redirectUrl)},3e3)},function(a){a.data&&a.data.message?h.message=a.data.message:a.message?h.message=a.message:h.message=h.loc.errorForgotPassword})},e.vm=h}}}a.$inject=["$q","$location","$timeout","authConfig"],angular.module("sds-angular-jwt").directive("authForgotPassword",a)}(),function(){"use strict";function a(a,b,c){return{restrict:"EA",scope:{redirectUrl:"@",onLogin:"&?"},templateUrl:"sds-angular-jwt/directives/auth-login-directive.html",link:function(d,e,f){var g={};g.loc=c.localization,g.user={email:null,password:null},g.submit=function(c){g.message="",c.$valid&&b.login(g.user).then(function(){b.authentication.data?"function"==typeof d.onLogin?d.onLogin()(b.authentication.data):a.path(d.redirectUrl):g.message=g.loc.errorLogin},function(a){a.data&&a.data.message?g.message=a.data.message:g.message=g.loc.errorLoginRejected})},d.vm=g}}}a.$inject=["$location","authService","authConfig"],angular.module("sds-angular-jwt").directive("authLogin",a)}(),function(){"use strict";function a(a,b,c,d,e){return{restrict:"EA",transclude:!0,scope:{redirectUrl:"@",loginUrl:"@",onSubmit:"&"},templateUrl:"sds-angular-jwt/directives/auth-register-directive.html",link:function(f,g,h){var i={};i.loc=e.localization,i.loginUrl=f.loginUrl||e.loginUrl,i.user={email:null,password:null},i.submit=function(e){if(i.message="",e.$valid){for(var g in e)e.hasOwnProperty(g)&&"$"!==g[0]&&(i.user[g]=e[g].$modelValue);a.when(f.onSubmit()(i.user)).then(function(){d.authentication.isAuth||d.login(i.user).then(function(){i.success=!0,f.redirectUrl&&c.path(f.redirectUrl)}),i.success=!0,f.redirectUrl&&b(function(){c.path(f.redirectUrl)},3e3)},function(a){a.data&&a.data.message?i.message=a.data.message:a.message?i.message=a.message:i.message=i.loc.errorRegister})}},f.vm=i}}}a.$inject=["$q","$timeout","$location","authService","authConfig"],angular.module("sds-angular-jwt").directive("authRegister",a)}(),function(){"use strict";function a(a,b,c,d){return{restrict:"EA",transclude:!0,scope:{redirectUrl:"@",loginUrl:"@",onSubmit:"&",token:"="},templateUrl:"sds-angular-jwt/directives/auth-login-directive.html",link:function(e,f,g){var h={};h.loc=d.localization,h.loginUrl=e.loginUrl||d.loginUrl,h.success=!1,h.user={password:null,confirmPassword:null},h.submit=function(d){if(h.message="",d.$valid)if(h.user.password!==h.user.confirmPassword)h.message=h.loc.errorPasswordMatch;else{var f=angular.copy(h.user);delete f.confirmPassword,f.token=e.token,a.when(e.onSubmit()(f)).then(function(){h.success=!0,e.redirectUrl&&c(function(){b.path(e.redirectUrl)},3e3)},function(a){a.data&&a.data.message?h.message=a.data.message:a.message?h.message=a.message:h.message=h.loc.errorResetPassword})}},e.vm=h}}}a.$inject=["$q","$location","$timeout","authConfig"],angular.module("sds-angular-jwt").directive("authResetPassword",a)}(),angular.module("sds-angular-jwt").run(["$templateCache",function(a){"use strict";a.put("sds-angular-jwt/directives/auth-forgot-password-directive.html",'<form name="authForm" ng-submit="vm.submit(authForm)" novalidate> <div ng-if="!vm.success"> <div class="alert alert-danger" ng-if="vm.message || (authForm.$invalid && authForm.$submitted)"> <h4><i class="icon fa fa-warning"></i> {{vm.loc.errorTitle}}</h4> {{vm.message}} <div ng-show="authForm.email.$error.email || authForm.email.$error.required" ng-bind="vm.loc.errorEmail"></div> </div> <p ng-bind="vm.loc.forgotPasswordText"></p> <div class="form-group" ng-class="{ \'has-error\': (authForm.email.$invalid && authForm.$submitted) }"> <label class="control-label" for="email">{{vm.loc.email}} * </label> <input class="form-control" type="email" name="email" id="email" ng-model="vm.user.email" required> </div> <button type="submit" class="btn btn-primary pull-right" ng-bind="vm.loc.submit"></button> <ng-transclude></ng-transclude> </div> <div class="alert alert-success" ng-if="vm.success"> <h4><i class="icon fa fa-check"></i> {{vm.loc.successForgotPasswordTitle}}</h4> <p ng-bind="vm.loc.successForgotPassword"></p> <a ng-href="{{vm.loginUrl}}" ng-bind="vm.loc.loginPage"></a> </div> </form>'),a.put("sds-angular-jwt/directives/auth-login-directive.html",'<form name="authForm" ng-submit="vm.submit(authForm)" novalidate> <div class="alert alert-danger" ng-if="vm.message || (authForm.$invalid && authForm.$submitted)"> <h4><i class="icon fa fa-warning"></i> {{vm.loc.errorTitle}}</h4> {{vm.message}} <div ng-show="authForm.email.$error.email || authForm.email.$error.required" ng-bind="vm.loc.errorEmail"></div> <div ng-show="authForm.password.$error.required" ng-bind="vm.loc.errorPassword"></div> </div> <div class="form-group" ng-class="{ \'has-error\': (authForm.email.$invalid && authForm.$submitted) }"> <label class="control-label" for="email">{{vm.loc.email}} * </label> <input class="form-control" type="email" name="email" id="email" ng-model="vm.user.email" required> </div> <div class="form-group" ng-class="{ \'has-error\': (authForm.password.$invalid && authForm.$submitted) }"> <label class="control-label" for="password">{{vm.loc.password}} *</label> <input class="form-control" type="password" name="password" id="password" ng-model="vm.user.password" required> </div> <button type="submit" class="btn btn-primary pull-right" ng-bind="vm.loc.login">Login</button> </form>'),a.put("sds-angular-jwt/directives/auth-register-directive.html",'<form name="authForm" ng-submit="vm.submit(authForm)" novalidate> <div ng-if="!vm.success"> <div class="alert alert-danger" ng-if="vm.message || (authForm.$invalid && authForm.$submitted)"> <h4><i class="icon fa fa-warning"></i> {{vm.loc.errorTitle}}</h4> {{vm.message}} <div ng-show="authForm.email.$error.email || authForm.email.$error.required" ng-bind="vm.loc.errorEmail"></div> <div ng-show="authForm.password.$error.required" ng-bind="vm.loc.errorPassword"></div> </div> <div class="form-group" ng-class="{ \'has-error\': (authForm.email.$invalid && authForm.$submitted) }"> <label class="control-label" for="email">{{vm.loc.email}} * </label> <input class="form-control" type="email" name="email" id="email" ng-model="vm.user.email" required> </div> <div class="form-group" ng-class="{ \'has-error\': (authForm.password.$invalid && authForm.$submitted) }"> <label class="control-label" for="password">{{vm.loc.password}} *</label> <input class="form-control" type="password" name="password" id="password" ng-model="vm.user.password" required> </div> <ng-transclude></ng-transclude> <button type="submit" class="btn btn-primary pull-right" ng-bind="vm.loc.submit"></button> </div> <div class="alert alert-success" ng-if="vm.success"> <h4><i class="icon fa fa-check"></i> {{vm.loc.successRegisterTitle}}</h4> <p ng-bind="vm.loc.successRegister"></p> <a ng-href="{{vm.loginUrl}}" ng-bind="vm.loc.loginPage"></a> </div> </form>'),a.put("sds-angular-jwt/directives/auth-reset-password-directive.html",'<form name="authForm" ng-submit="vm.submit(authForm)" novalidate> <div ng-if="!vm.success"> <div class="alert alert-danger" ng-if="vm.message || (authForm.$invalid && authForm.$submitted)"> <h4><i class="icon fa fa-warning"></i> {{vm.loc.errorTitle}}</h4> {{vm.message}} <div ng-show="authForm.password.$error.required" ng-bind="vm.loc.errorPassword"></div> <div ng-show="authForm.confirmPassword.$error.required" ng-bind="vm.loc.errorConfirm"></div> </div> <div class="form-group" ng-class="{ \'has-error\': (authForm.password.$invalid && authForm.$submitted) }"> <label class="control-label" for="password">{{vm.loc.password}} *</label> <input class="form-control" type="password" name="password" id="password" ng-model="vm.user.password" required> </div> <div class="form-group" ng-class="{ \'has-error\': (authForm.password.$invalid && authForm.$submitted) }"> <label class="control-label" for="confirmPassword">{{vm.loc.confirm}} *</label> <input class="form-control" type="password" name="confirmPassword" id="confirmPassword" ng-model="vm.user.confirmPassword" required> </div> <button type="submit" class="btn btn-primary pull-right" ng-bind="vm.loc.submit"></button> <ng-transclude></ng-transclude> </div> <div class="alert alert-success" ng-if="vm.success"> <h4><i class="icon fa fa-check"></i> {{vm.loc.successResetPasswordTitle}}</h4> <p ng-bind="vm.loc.successResetPassword"></p> <a ng-href="{{vm.loginUrl}}" ng-bind="vm.loc.loginPage"></a> </div> </form>')}]);
//# sourceMappingURL=sds-angular-jwt.min.js.map